// Code generated by replycodes/generate.go; DO NOT EDIT.
package replycodes

type ReplyType int

const (
	ActionSuceessfullyCompletedReplyType ReplyType = 0
	TableEntryReplyType                  ReplyType = 1
	TableHeadingReplyType                ReplyType = 2
	RunTimeErrorReplyType                ReplyType = 8
	ParseTimeErrorReplyType              ReplyType = 9
)

func (e ReplyType) String() string {
	switch e {
	case ActionSuceessfullyCompletedReplyType:
		return "Action suceessfully completed"
	case TableEntryReplyType:
		return "Table entry"
	case TableHeadingReplyType:
		return "Table heading"
	case RunTimeErrorReplyType:
		return "Run-time error"
	case ParseTimeErrorReplyType:
		return "Parse-time error"
	}
	return "Unknown"
}

type ReplyCode int

const (
	OkReplyCode                                                   ReplyCode = 0
	WelcomeReplyCode                                              ReplyCode = 1
	ReadingConfigurationReplyCode                                 ReplyCode = 2
	ReconfiguredReplyCode                                         ReplyCode = 3
	ReconfigurationInProgressReplyCode                            ReplyCode = 4
	ReconfigurationAlreadyInProgressQueueingReplyCode             ReplyCode = 5
	ReconfigurationIgnoredShuttingDownReplyCode                   ReplyCode = 6
	ShutdownOrderedReplyCode                                      ReplyCode = 7
	AlreadyDisabledReplyCode                                      ReplyCode = 8
	DisabledReplyCode                                             ReplyCode = 9
	AlreadyEnabledReplyCode                                       ReplyCode = 10
	EnabledReplyCode                                              ReplyCode = 11
	RestartedReplyCode                                            ReplyCode = 12
	StatusReportReplyCode                                         ReplyCode = 13
	RouteCountReplyCode                                           ReplyCode = 14
	ReloadingReplyCode                                            ReplyCode = 15
	AccessRestrictedReplyCode                                     ReplyCode = 16
	ReconfigurationAlreadyInProgressRemovingQueuedConfigReplyCode ReplyCode = 17
	ReconfigurationConfirmedReplyCode                             ReplyCode = 18
	NothingToDoConfigureUndoConfirmReplyCode                      ReplyCode = 19
	ConfigurationOkReplyCode                                      ReplyCode = 20
	UndoRequestedReplyCode                                        ReplyCode = 21
	UndoScheduledReplyCode                                        ReplyCode = 22
	EvaluationOfExpressionReplyCode                               ReplyCode = 23
	GracefulRestartStatusReportReplyCode                          ReplyCode = 24
	GracefulRestartOrderedReplyCode                               ReplyCode = 25
	BirdVersionReplyCode                                          ReplyCode = 1000
	InterfaceListReplyCode                                        ReplyCode = 1001
	ProtocolListReplyCode                                         ReplyCode = 1002
	InterfaceAddressReplyCode                                     ReplyCode = 1003
	InterfaceFlagsReplyCode                                       ReplyCode = 1004
	InterfaceSummaryReplyCode                                     ReplyCode = 1005
	ProtocolDetailsReplyCode                                      ReplyCode = 1006
	RouteListReplyCode                                            ReplyCode = 1007
	RouteDetailsReplyCode                                         ReplyCode = 1008
	StaticRouteListReplyCode                                      ReplyCode = 1009
	SymbolListReplyCode                                           ReplyCode = 1010
	UptimeReplyCode                                               ReplyCode = 1011
	RouteExtendedAttributeListReplyCode                           ReplyCode = 1012
	ShowOspfNeighborsReplyCode                                    ReplyCode = 1013
	ShowOspfReplyCode                                             ReplyCode = 1014
	ShowOspfInterfaceReplyCode                                    ReplyCode = 1015
	ShowOspfStateTopologyReplyCode                                ReplyCode = 1016
	ShowOspfLsadbReplyCode                                        ReplyCode = 1017
	ShowMemoryReplyCode                                           ReplyCode = 1018
	ShowRoaListReplyCode                                          ReplyCode = 1019
	ShowBfdSessionsReplyCode                                      ReplyCode = 1020
	ShowRipInterfaceReplyCode                                     ReplyCode = 1021
	ShowRipNeighborsReplyCode                                     ReplyCode = 1022
	ShowBabelInterfacesReplyCode                                  ReplyCode = 1023
	ShowBabelNeighborsReplyCode                                   ReplyCode = 1024
	ShowBabelEntriesReplyCode                                     ReplyCode = 1025
	ShowMplsRangesReplyCode                                       ReplyCode = 1026
	ReplyTooLongReplyCode                                         ReplyCode = 8000
	RouteNotFoundReplyCode                                        ReplyCode = 8001
	ConfigurationFileErrorReplyCode                               ReplyCode = 8002
	NoProtocolsMatchReplyCode                                     ReplyCode = 8003
	StoppedDueToReconfigurationReplyCode                          ReplyCode = 8004
	ProtocolIsDownCannotDumpReplyCode                             ReplyCode = 8005
	ReloadFailedReplyCode                                         ReplyCode = 8006
	AccessDeniedReplyCode                                         ReplyCode = 8007
	EvaluationRuntimeErrorReplyCode                               ReplyCode = 8008
	FailedToOpenFileReplyCode                                     ReplyCode = 8009
	CommandTooLongReplyCode                                       ReplyCode = 9000
	ParseErrorReplyCode                                           ReplyCode = 9001
	InvalidSymbolTypeReplyCode                                    ReplyCode = 9002
	ArgumentTooLongReplyCode                                      ReplyCode = 9003
)

func (e ReplyCode) String() string {
	switch e {
	case OkReplyCode:
		return "OK"
	case WelcomeReplyCode:
		return "Welcome"
	case ReadingConfigurationReplyCode:
		return "Reading configuration"
	case ReconfiguredReplyCode:
		return "Reconfigured"
	case ReconfigurationInProgressReplyCode:
		return "Reconfiguration in progress"
	case ReconfigurationAlreadyInProgressQueueingReplyCode:
		return "Reconfiguration already in progress, queueing"
	case ReconfigurationIgnoredShuttingDownReplyCode:
		return "Reconfiguration ignored, shutting down"
	case ShutdownOrderedReplyCode:
		return "Shutdown ordered"
	case AlreadyDisabledReplyCode:
		return "Already disabled"
	case DisabledReplyCode:
		return "Disabled"
	case AlreadyEnabledReplyCode:
		return "Already enabled"
	case EnabledReplyCode:
		return "Enabled"
	case RestartedReplyCode:
		return "Restarted"
	case StatusReportReplyCode:
		return "Status report"
	case RouteCountReplyCode:
		return "Route count"
	case ReloadingReplyCode:
		return "Reloading"
	case AccessRestrictedReplyCode:
		return "Access restricted"
	case ReconfigurationAlreadyInProgressRemovingQueuedConfigReplyCode:
		return "Reconfiguration already in progress, removing queued config"
	case ReconfigurationConfirmedReplyCode:
		return "Reconfiguration confirmed"
	case NothingToDoConfigureUndoConfirmReplyCode:
		return "Nothing to do (configure undo/confirm)"
	case ConfigurationOkReplyCode:
		return "Configuration OK"
	case UndoRequestedReplyCode:
		return "Undo requested"
	case UndoScheduledReplyCode:
		return "Undo scheduled"
	case EvaluationOfExpressionReplyCode:
		return "Evaluation of expression"
	case GracefulRestartStatusReportReplyCode:
		return "Graceful restart status report"
	case GracefulRestartOrderedReplyCode:
		return "Graceful restart ordered"
	case BirdVersionReplyCode:
		return "BIRD version"
	case InterfaceListReplyCode:
		return "Interface list"
	case ProtocolListReplyCode:
		return "Protocol list"
	case InterfaceAddressReplyCode:
		return "Interface address"
	case InterfaceFlagsReplyCode:
		return "Interface flags"
	case InterfaceSummaryReplyCode:
		return "Interface summary"
	case ProtocolDetailsReplyCode:
		return "Protocol details"
	case RouteListReplyCode:
		return "Route list"
	case RouteDetailsReplyCode:
		return "Route details"
	case StaticRouteListReplyCode:
		return "Static route list"
	case SymbolListReplyCode:
		return "Symbol list"
	case UptimeReplyCode:
		return "Uptime"
	case RouteExtendedAttributeListReplyCode:
		return "Route extended attribute list"
	case ShowOspfNeighborsReplyCode:
		return "Show ospf neighbors"
	case ShowOspfReplyCode:
		return "Show ospf"
	case ShowOspfInterfaceReplyCode:
		return "Show ospf interface"
	case ShowOspfStateTopologyReplyCode:
		return "Show ospf state/topology"
	case ShowOspfLsadbReplyCode:
		return "Show ospf lsadb"
	case ShowMemoryReplyCode:
		return "Show memory"
	case ShowRoaListReplyCode:
		return "Show ROA list"
	case ShowBfdSessionsReplyCode:
		return "Show BFD sessions"
	case ShowRipInterfaceReplyCode:
		return "Show RIP interface"
	case ShowRipNeighborsReplyCode:
		return "Show RIP neighbors"
	case ShowBabelInterfacesReplyCode:
		return "Show Babel interfaces"
	case ShowBabelNeighborsReplyCode:
		return "Show Babel neighbors"
	case ShowBabelEntriesReplyCode:
		return "Show Babel entries"
	case ShowMplsRangesReplyCode:
		return "Show MPLS ranges"
	case ReplyTooLongReplyCode:
		return "Reply too long"
	case RouteNotFoundReplyCode:
		return "Route not found"
	case ConfigurationFileErrorReplyCode:
		return "Configuration file error"
	case NoProtocolsMatchReplyCode:
		return "No protocols match"
	case StoppedDueToReconfigurationReplyCode:
		return "Stopped due to reconfiguration"
	case ProtocolIsDownCannotDumpReplyCode:
		return "Protocol is down => cannot dump"
	case ReloadFailedReplyCode:
		return "Reload failed"
	case AccessDeniedReplyCode:
		return "Access denied"
	case EvaluationRuntimeErrorReplyCode:
		return "Evaluation runtime error"
	case FailedToOpenFileReplyCode:
		return "Failed to open file"
	case CommandTooLongReplyCode:
		return "Command too long"
	case ParseErrorReplyCode:
		return "Parse error"
	case InvalidSymbolTypeReplyCode:
		return "Invalid symbol type"
	case ArgumentTooLongReplyCode:
		return "Argument too long"
	}
	return "Unknown"
}

func (e ReplyCode) Type() ReplyType {
	return ReplyType(e / 1000)
}
